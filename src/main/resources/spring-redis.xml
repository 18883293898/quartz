<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:mybatis="http://mybatis.org/schema/mybatis-spring"
	xsi:schemaLocation="  
            http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd  
            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
            http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
    		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
    		http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring.xsd">

	<bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="maxIdle" value="${redis.maxIdle}" />
		<property name="maxTotal" value="${redis.maxTotal}" />
		<property name="maxWaitMillis" value="${redis.maxWaitMillis}" />
		<property name="testOnBorrow" value="${redis.testOnBorrow}" />
	</bean>


	
	<bean id="redisSentinelConfiguration"
		class="org.springframework.data.redis.connection.RedisSentinelConfiguration">
		<property name="master">
			<bean class="org.springframework.data.redis.connection.RedisNode">
				<property name="name" value="mymaster"></property>
			</bean>
		</property>
		<!-- 下面三个都是配置的哨兵 -->
		<property name="sentinels">
			<set>
				<bean class="org.springframework.data.redis.connection.RedisNode">
					<constructor-arg name="host" value="${redis.sentinel.host1}" />
					<constructor-arg name="port" value="${redis.sentinel.port1}" />
				</bean>
				<bean class="org.springframework.data.redis.connection.RedisNode">
					<constructor-arg name="host" value="${redis.sentinel.host2}" />
					<constructor-arg name="port" value="${redis.sentinel.port2}" />
				</bean>
				<bean class="org.springframework.data.redis.connection.RedisNode">
					<constructor-arg name="host" value="${redis.sentinel.host3}" />
					<constructor-arg name="port" value="${redis.sentinel.port3}" />
				</bean>
			</set>
		</property>
	</bean>

	<!-- <bean id="cacheManager" class="org.springframework.data.redis.cache.RedisCacheManager">
		<constructor-arg index="0" ref="redisTemplate" />
	</bean> -->
	
	<bean id="connectionFactory"
		class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
		<constructor-arg index="0" ref="redisSentinelConfiguration" />
		<constructor-arg index="1" ref="poolConfig" />
		<property name="database" value="${redis.dbIndex}" />
	</bean>

	<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
		<property name="connectionFactory" ref="connectionFactory" />
		<property name="keySerializer" ref="keySerializer" />
		<property name="valueSerializer" ref="valueSerializer" />
		<property name="hashKeySerializer" ref="hashKeySerializer" />
		<property name="hashValueSerializer" ref="hashValueSerializer" />
	</bean>
	
	<bean id="keySerializer"
		class="org.springframework.data.redis.serializer.StringRedisSerializer">
	</bean>
	<bean id="valueSerializer"
		class="org.springframework.data.redis.serializer.StringRedisSerializer">
	</bean>
	<bean id="hashKeySerializer"
		class="org.springframework.data.redis.serializer.StringRedisSerializer">
	</bean>
	<bean id="hashValueSerializer"
		class="org.springframework.data.redis.serializer.StringRedisSerializer">
	</bean>

	<bean id="redisScriptAddUerList"
		class="org.springframework.data.redis.core.script.DefaultRedisScript"
		lazy-init="true">
		<property name="location" value="addUserBench.lua" />
		<property name="resultType" value="java.lang.Boolean" />
	</bean>

	<bean id="redisScriptUpdateUerList"
		class="org.springframework.data.redis.core.script.DefaultRedisScript"
		lazy-init="true">
		<property name="location" value="updateUserBench.lua" />
		<property name="resultType" value="java.lang.Boolean" />
	</bean>

	<bean id="redisScriptDeleteUerList"
		class="org.springframework.data.redis.core.script.DefaultRedisScript"
		lazy-init="true">
		<property name="location" value="deleteUserBench.lua" />
		<property name="resultType" value="java.lang.Boolean" />
	</bean>

</beans>  